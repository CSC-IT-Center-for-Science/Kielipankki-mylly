---
# Basic demo of using Ansible to create a virtual machine on Pouta.csc.fi
#
# You'll need to download and source your credentials before this will work:
#  https://research.csc.fi/pouta-credentials
#
- name: Create virtual machine on cPouta
  hosts: localhost # The OpenStack modules run on your local machine.
  connection: local

  vars:
    # These will need changing based on your project
    chipster_key: Martin_VM
    chipster_security_groups: default,chipster-sg
    chipster_network: clarin

  tasks:
    - name: Create security group
      os_security_group: name=chipster-sg

    - name: Add rule to security group
      os_security_group_rule:
        security_group: chipster-sg
        protocol: tcp
        port_range_min: 80
        port_range_max: 80
        remote_ip_prefix: 0.0.0.0/0

    - name: Add rule to security group
      os_security_group_rule:
        security_group: chipster-sg
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Create a virtual machine
      register: result
      os_server:
        name: cielipankki
        image: Chipster_3.6.3_Root
        flavor: small
        key_name: "{{ chipster_key }}"
        security_groups: "{{ chipster_security_groups }}"
        nics:
          - net-name: "{{ chipster_network }}"
    - name: Find the auto-allocated floating IP address
      os_server_facts:
        server: "{{ result.server.id }}"
      until: openstack.networks.values()[0] | length > 1
      delay: 10
      retries: 5
    - name: Store the auto-allocated floating IP address
      set_fact: floating_ip={{ openstack.networks.values()[0][1] }}
    - name: Add new host to inventory
      add_host: name={{ floating_ip }} groups=new
    - name: clear ssh known_hosts
      known_hosts: name={{ floating_ip }} state=absent
      when: result | changed
    - name: Wait for instance to be ready
      wait_for: host={{ floating_ip }} port=22 search_regex=OpenSSH delay=60

- name: create a volume
  hosts: localhost
  tasks:
  - name: create 40g test volume
    os_volume:
      state: present
      size: 40
      display_name: chipster_volume


- name: Configure demo host
  hosts: new
  remote_user: ubuntu
  become: yes
  vars:
    demo_photo: kajaani.jpg
    demo_greeting: "Hello from Kajaani!"

  tasks:
   - name: Install a webserver
     apt: name=apache2 state=present update_cache=yes

   - name: Deploy demo web page
     template: src=templates/demo.html.j2 dest=/var/www/index.html owner=www-data group=www-data mode=0644

   - name: Copy a picture of Kajaani
     copy: src=resources/kajaani.jpg dest=/var/www/kajaani.jpg owner=www-data group=www-data mode=0644

   - name: Firewall
     ufw: state=enabled policy=deny

   
   - name: Configure firewalld for http
     ufw: rule=allow port=80 proto=tcp

   - name: Configure firewalld for ssh
     ufw: rule=allow port=22 proto=tcp

   - name: Start apache
     service: name=httpd state=started enabled=yes

     
